; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34120.0 

	TITLE	F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\build\Debug\obj\GeneratedFont.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A ; touchgfx::GeneratedVectorFont::glyphNode
_BSS	SEGMENT
?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A DB 0eH DUP (?) ; touchgfx::GeneratedVectorFont::glyphNode
_BSS	ENDS
msvcjmc	SEGMENT
__68D132EB_concurrencysal@h DB 01H
__4DC47379_sal@h DB 01H
__B6ADDB23_vadefs@h DB 01H
__A2A1025A_vcruntime@h DB 01H
__FA7F0B8A_stdarg@h DB 01H
__735960E1_corecrt@h DB 01H
__9FB25DBE_assert@h DB 01H
__CEA0B545_stdint@h DB 01H
__C013EE28_Config@hpp DB 01H
__50C2F699_Types@hpp DB 01H
__829C6E3D_Unicode@hpp DB 01H
__19EB957D_Font@hpp DB 01H
__9C1333CB_ConstFont@hpp DB 01H
__1353A2A0_GeneratedFont@hpp DB 01H
__1D9A7FA2_corecrt_math@h DB 01H
__2E93F1C0_math@h DB 01H
__DBAADE7C_GeneratedFont@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::kerningTablePos
PUBLIC	??1Font@touchgfx@@UAE@XZ			; touchgfx::Font::~Font
PUBLIC	?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z	; touchgfx::Font::getGlyph
PUBLIC	?getFallbackChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFallbackChar
PUBLIC	?getEllipsisChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getEllipsisChar
PUBLIC	?getBaseline@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getBaseline
PUBLIC	?getHeight@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getHeight
PUBLIC	?getBitsPerPixel@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getBitsPerPixel
PUBLIC	?getByteAlignRow@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getByteAlignRow
PUBLIC	?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::Font::getKerning
PUBLIC	?getGSUBTable@Font@touchgfx@@UBEPBGXZ		; touchgfx::Font::getGSUBTable
PUBLIC	?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::Font::getContextualFormsTable
PUBLIC	?isVectorBasedFont@Font@touchgfx@@UBE_NXZ	; touchgfx::Font::isVectorBasedFont
PUBLIC	?getScaleFactor@Font@touchgfx@@UBEMXZ		; touchgfx::Font::getScaleFactor
PUBLIC	??0Font@touchgfx@@IAE@GGEEEEEEGG@Z		; touchgfx::Font::Font
PUBLIC	??_GFont@touchgfx@@UAEPAXI@Z			; touchgfx::Font::`scalar deleting destructor'
PUBLIC	??1ConstFont@touchgfx@@UAE@XZ			; touchgfx::ConstFont::~ConstFont
PUBLIC	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z ; touchgfx::GeneratedFont::GeneratedFont
PUBLIC	?getPixelData@GeneratedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z ; touchgfx::GeneratedFont::getPixelData
PUBLIC	?getKerning@GeneratedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::GeneratedFont::getKerning
PUBLIC	?getGSUBTable@GeneratedFont@touchgfx@@UBEPBGXZ	; touchgfx::GeneratedFont::getGSUBTable
PUBLIC	?getContextualFormsTable@GeneratedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::GeneratedFont::getContextualFormsTable
PUBLIC	??1GeneratedFont@touchgfx@@UAE@XZ		; touchgfx::GeneratedFont::~GeneratedFont
PUBLIC	??_GGeneratedFont@touchgfx@@UAEPAXI@Z		; touchgfx::GeneratedFont::`scalar deleting destructor'
PUBLIC	?getGlyph@FusedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z ; touchgfx::FusedFont::getGlyph
PUBLIC	??0GeneratedVectorFont@touchgfx@@QAE@GMPBUVectorFontNode@1@ABUVectorFontData@1@PBQBGPBUVectorKerningNode@1@QBGPBUFontContextualFormsTable@1@@Z ; touchgfx::GeneratedVectorFont::GeneratedVectorFont
PUBLIC	?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@G@Z ; touchgfx::GeneratedVectorFont::getGlyph
PUBLIC	?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z ; touchgfx::GeneratedVectorFont::getGlyph
PUBLIC	?getKerning@GeneratedVectorFont@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::GeneratedVectorFont::getKerning
PUBLIC	?isVectorBasedFont@GeneratedVectorFont@touchgfx@@UBE_NXZ ; touchgfx::GeneratedVectorFont::isVectorBasedFont
PUBLIC	?getScaleFactor@GeneratedVectorFont@touchgfx@@UBEMXZ ; touchgfx::GeneratedVectorFont::getScaleFactor
PUBLIC	?getGSUBTable@GeneratedVectorFont@touchgfx@@UBEPBGXZ ; touchgfx::GeneratedVectorFont::getGSUBTable
PUBLIC	?getContextualFormsTable@GeneratedVectorFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::GeneratedVectorFont::getContextualFormsTable
PUBLIC	?find@GeneratedVectorFont@touchgfx@@ABEPBUVectorFontNode@2@G@Z ; touchgfx::GeneratedVectorFont::find
PUBLIC	?getGlyphNode@GeneratedVectorFont@touchgfx@@ABEPBUGlyphNode@2@PBUVectorFontNode@2@@Z ; touchgfx::GeneratedVectorFont::getGlyphNode
PUBLIC	??1GeneratedVectorFont@touchgfx@@UAE@XZ		; touchgfx::GeneratedVectorFont::~GeneratedVectorFont
PUBLIC	??_GGeneratedVectorFont@touchgfx@@UAEPAXI@Z	; touchgfx::GeneratedVectorFont::`scalar deleting destructor'
PUBLIC	_ceilf
PUBLIC	__JustMyCode_Default
PUBLIC	??_7Font@touchgfx@@6B@				; touchgfx::Font::`vftable'
PUBLIC	??_7GeneratedFont@touchgfx@@6B@			; touchgfx::GeneratedFont::`vftable'
PUBLIC	??_7GeneratedVectorFont@touchgfx@@6B@		; touchgfx::GeneratedVectorFont::`vftable'
PUBLIC	??_R4Font@touchgfx@@6B@				; touchgfx::Font::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFont@touchgfx@@@8			; touchgfx::Font `RTTI Type Descriptor'
PUBLIC	??_R3Font@touchgfx@@8				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Font@touchgfx@@8				; touchgfx::Font::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Font@touchgfx@@8			; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVConstFont@touchgfx@@@8			; touchgfx::ConstFont `RTTI Type Descriptor'
PUBLIC	??_R3ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ConstFont@touchgfx@@8		; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4GeneratedFont@touchgfx@@6B@		; touchgfx::GeneratedFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGeneratedFont@touchgfx@@@8		; touchgfx::GeneratedFont `RTTI Type Descriptor'
PUBLIC	??_R3GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GeneratedFont@touchgfx@@8		; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4GeneratedVectorFont@touchgfx@@6B@		; touchgfx::GeneratedVectorFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGeneratedVectorFont@touchgfx@@@8	; touchgfx::GeneratedVectorFont `RTTI Type Descriptor'
PUBLIC	??_R3GeneratedVectorFont@touchgfx@@8		; touchgfx::GeneratedVectorFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GeneratedVectorFont@touchgfx@@8		; touchgfx::GeneratedVectorFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GeneratedVectorFont@touchgfx@@8	; touchgfx::GeneratedVectorFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?getStringWidth@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getStringWidth@Font@touchgfx@@UBAGEPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getCharWidth@Font@touchgfx@@UBEGG@Z:PROC	; touchgfx::Font::getCharWidth
EXTRN	?getSpacingAbove@Font@touchgfx@@UBAFPBGZZ:PROC	; touchgfx::Font::getSpacingAbove
EXTRN	?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getMaxTextHeight
EXTRN	?getFontHeight@Font@touchgfx@@UBEGXZ:PROC	; touchgfx::Font::getFontHeight
EXTRN	?getMinimumTextHeight@Font@touchgfx@@UBEGXZ:PROC ; touchgfx::Font::getMinimumTextHeight
EXTRN	?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getNumberOfLines
EXTRN	??_EFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::Font::`vector deleting destructor'
EXTRN	??0ConstFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEGG@Z:PROC ; touchgfx::ConstFont::ConstFont
EXTRN	?getGlyph@ConstFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z:PROC ; touchgfx::ConstFont::getGlyph
EXTRN	??_EGeneratedFont@touchgfx@@UAEPAXI@Z:PROC	; touchgfx::GeneratedFont::`vector deleting destructor'
EXTRN	??_EGeneratedVectorFont@touchgfx@@UAEPAXI@Z:PROC ; touchgfx::GeneratedVectorFont::`vector deleting destructor'
EXTRN	__imp__ceil:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__ftol2:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@GeneratedVectorFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GeneratedVectorFont@touchgfx@@8 DD FLAT:??_R0?AVGeneratedVectorFont@touchgfx@@@8 ; touchgfx::GeneratedVectorFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GeneratedVectorFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2GeneratedVectorFont@touchgfx@@8
rdata$r	SEGMENT
??_R2GeneratedVectorFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@GeneratedVectorFont@touchgfx@@8 ; touchgfx::GeneratedVectorFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3GeneratedVectorFont@touchgfx@@8
rdata$r	SEGMENT
??_R3GeneratedVectorFont@touchgfx@@8 DD 00H		; touchgfx::GeneratedVectorFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2GeneratedVectorFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGeneratedVectorFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVGeneratedVectorFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::GeneratedVectorFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGeneratedVectorFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4GeneratedVectorFont@touchgfx@@6B@
rdata$r	SEGMENT
??_R4GeneratedVectorFont@touchgfx@@6B@ DD 00H		; touchgfx::GeneratedVectorFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGeneratedVectorFont@touchgfx@@@8
	DD	FLAT:??_R3GeneratedVectorFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 DD FLAT:??_R0?AVGeneratedFont@touchgfx@@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R2GeneratedFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R3GeneratedFont@touchgfx@@8 DD 00H			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGeneratedFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVGeneratedFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::GeneratedFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGeneratedFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4GeneratedFont@touchgfx@@6B@
rdata$r	SEGMENT
??_R4GeneratedFont@touchgfx@@6B@ DD 00H			; touchgfx::GeneratedFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGeneratedFont@touchgfx@@@8
	DD	FLAT:??_R3GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ConstFont@touchgfx@@8 DD FLAT:??_R0?AVConstFont@touchgfx@@@8 ; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R2ConstFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8 ; touchgfx::ConstFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R3ConstFont@touchgfx@@8 DD 00H			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVConstFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVConstFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::ConstFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVConstFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Font@touchgfx@@8 DD FLAT:??_R0?AVFont@touchgfx@@@8 ; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2Font@touchgfx@@8
rdata$r	SEGMENT
??_R2Font@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@Font@touchgfx@@8 ; touchgfx::Font::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Font@touchgfx@@8
rdata$r	SEGMENT
??_R3Font@touchgfx@@8 DD 00H				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@	; touchgfx::Font `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Font@touchgfx@@6B@
rdata$r	SEGMENT
??_R4Font@touchgfx@@6B@ DD 00H				; touchgfx::Font::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFont@touchgfx@@@8
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_7GeneratedVectorFont@touchgfx@@6B@
CONST	SEGMENT
??_7GeneratedVectorFont@touchgfx@@6B@ DD FLAT:??_R4GeneratedVectorFont@touchgfx@@6B@ ; touchgfx::GeneratedVectorFont::`vftable'
	DD	FLAT:??_EGeneratedVectorFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAFPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBaseline@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@GeneratedVectorFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@GeneratedVectorFont@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@GeneratedVectorFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
	DD	FLAT:?isVectorBasedFont@GeneratedVectorFont@touchgfx@@UBE_NXZ
	DD	FLAT:?getScaleFactor@GeneratedVectorFont@touchgfx@@UBEMXZ
CONST	ENDS
;	COMDAT ??_7GeneratedFont@touchgfx@@6B@
CONST	SEGMENT
??_7GeneratedFont@touchgfx@@6B@ DD FLAT:??_R4GeneratedFont@touchgfx@@6B@ ; touchgfx::GeneratedFont::`vftable'
	DD	FLAT:??_EGeneratedFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:?getGlyph@ConstFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAFPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBaseline@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@GeneratedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@GeneratedFont@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@GeneratedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
	DD	FLAT:?isVectorBasedFont@Font@touchgfx@@UBE_NXZ
	DD	FLAT:?getScaleFactor@Font@touchgfx@@UBEMXZ
	DD	FLAT:?getPixelData@GeneratedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z
CONST	ENDS
;	COMDAT ??_7Font@touchgfx@@6B@
CONST	SEGMENT
??_7Font@touchgfx@@6B@ DD FLAT:??_R4Font@touchgfx@@6B@	; touchgfx::Font::`vftable'
	DD	FLAT:??_EFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:__purecall
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAFPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBaseline@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@Font@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
	DD	FLAT:?isVectorBasedFont@Font@touchgfx@@UBE_NXZ
	DD	FLAT:?getScaleFactor@Font@touchgfx@@UBEMXZ
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ceilf
_TEXT	SEGMENT
tv74 = -196						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h
; Line 670
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4]
	mov	ecx, 1
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __1D9A7FA2_corecrt_math@h
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 671
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	mov	esi, esp
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp__ceil
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	fstp	DWORD PTR tv74[ebp]
	fld	DWORD PTR tv74[ebp]
; Line 672
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ceilf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GGeneratedVectorFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GGeneratedVectorFont@touchgfx@@UAEPAXI@Z PROC	; touchgfx::GeneratedVectorFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GeneratedVectorFont@touchgfx@@UAE@XZ
	npad	1
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	48					; 00000030H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGeneratedVectorFont@touchgfx@@UAEPAXI@Z ENDP	; touchgfx::GeneratedVectorFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GeneratedVectorFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GeneratedVectorFont@touchgfx@@UAE@XZ PROC		; touchgfx::GeneratedVectorFont::~GeneratedVectorFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	npad	1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GeneratedVectorFont@touchgfx@@UAE@XZ ENDP		; touchgfx::GeneratedVectorFont::~GeneratedVectorFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyphNode@GeneratedVectorFont@touchgfx@@ABEPBUGlyphNode@2@PBUVectorFontNode@2@@Z
_TEXT	SEGMENT
tv181 = -284						; size = 4
tv77 = -280						; size = 4
_advance$ = -80						; size = 4
_left$ = -68						; size = 4
_top$ = -56						; size = 4
_height$ = -44						; size = 4
_width$ = -32						; size = 4
_flags$ = -17						; size = 1
_this$ = -8						; size = 4
_node$ = 8						; size = 4
?getGlyphNode@GeneratedVectorFont@touchgfx@@ABEPBUGlyphNode@2@PBUVectorFontNode@2@@Z PROC ; touchgfx::GeneratedVectorFont::getGlyphNode, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 117
	mov	DWORD PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A, 0
; Line 118
	mov	BYTE PTR _flags$[ebp], 0
; Line 121
	mov	eax, DWORD PTR _node$[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+4, cx
; Line 123
	mov	eax, DWORD PTR _node$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	test	ecx, ecx
	jne	SHORT $LN8@getGlyphNo
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN9@getGlyphNo
$LN8@getGlyphNo:
	mov	edx, DWORD PTR _node$[ebp]
	movzx	eax, WORD PTR [edx+6]
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+20]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	fstp	DWORD PTR tv181[ebp]
	movss	xmm0, DWORD PTR tv181[ebp]
	cvttss2si edx, xmm0
	add	edx, 1
	mov	DWORD PTR tv77[ebp], edx
$LN9@getGlyphNo:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR _width$[ebp], eax
; Line 124
	mov	al, BYTE PTR _width$[ebp]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+6, al
; Line 126
	cmp	DWORD PTR _width$[ebp], 255		; 000000ffH
	jle	SHORT $LN2@getGlyphNo
; Line 128
	movzx	eax, BYTE PTR _flags$[ebp]
	or	eax, 8
	mov	BYTE PTR _flags$[ebp], al
$LN2@getGlyphNo:
; Line 131
	mov	eax, DWORD PTR _node$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cvtsi2ss xmm0, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [edx+20]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	call	__ftol2_sse
	mov	DWORD PTR _height$[ebp], eax
; Line 132
	mov	al, BYTE PTR _height$[ebp]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+7, al
; Line 133
	cmp	DWORD PTR _height$[ebp], 255		; 000000ffH
	jle	SHORT $LN3@getGlyphNo
; Line 135
	movzx	eax, BYTE PTR _flags$[ebp]
	or	eax, 16					; 00000010H
	mov	BYTE PTR _flags$[ebp], al
$LN3@getGlyphNo:
; Line 138
	mov	eax, DWORD PTR _node$[ebp]
	movsx	ecx, WORD PTR [eax+10]
	cvtsi2ss xmm0, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [edx+20]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	call	__ftol2_sse
	mov	DWORD PTR _top$[ebp], eax
; Line 139
	mov	al, BYTE PTR _top$[ebp]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+8, al
; Line 140
	cmp	DWORD PTR _top$[ebp], 255		; 000000ffH
	jle	SHORT $LN4@getGlyphNo
; Line 142
	mov	eax, DWORD PTR _top$[ebp]
	and	eax, 768				; 00000300H
	sar	eax, 3
	movzx	ecx, BYTE PTR _flags$[ebp]
	or	ecx, eax
	mov	BYTE PTR _flags$[ebp], cl
$LN4@getGlyphNo:
; Line 145
	mov	eax, DWORD PTR _node$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	cvtsi2ss xmm0, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [edx+20]
	cvttss2si eax, xmm0
	mov	DWORD PTR _left$[ebp], eax
; Line 146
	mov	al, BYTE PTR _left$[ebp]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+9, al
; Line 148
	mov	eax, DWORD PTR _node$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	cvtsi2ss xmm0, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [edx+20]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	mov	DWORD PTR _advance$[ebp], eax
; Line 149
	mov	al, BYTE PTR _advance$[ebp]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+10, al
; Line 150
	cmp	DWORD PTR _advance$[ebp], 255		; 000000ffH
	jle	SHORT $LN5@getGlyphNo
; Line 152
	movzx	eax, BYTE PTR _flags$[ebp]
	or	eax, 128				; 00000080H
	mov	BYTE PTR _flags$[ebp], al
$LN5@getGlyphNo:
; Line 155
	mov	eax, DWORD PTR _node$[ebp]
	mov	cl, BYTE PTR [eax+16]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+11, cl
; Line 156
	mov	eax, DWORD PTR _node$[ebp]
	movzx	ecx, WORD PTR [eax+16]
	cmp	ecx, 255				; 000000ffH
	jle	SHORT $LN6@getGlyphNo
; Line 158
	mov	eax, DWORD PTR _node$[ebp]
	movzx	ecx, WORD PTR [eax+16]
	sar	ecx, 8
	and	ecx, 7
	movzx	edx, BYTE PTR _flags$[ebp]
	or	edx, ecx
	mov	BYTE PTR _flags$[ebp], dl
$LN6@getGlyphNo:
; Line 161
	mov	eax, DWORD PTR _node$[ebp]
	mov	cl, BYTE PTR [eax+18]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+12, cl
; Line 163
	movzx	eax, BYTE PTR _flags$[ebp]
	mov	BYTE PTR ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A+13, al
; Line 165
	mov	eax, OFFSET ?glyphNode@GeneratedVectorFont@touchgfx@@0UGlyphNode@2@A ; touchgfx::GeneratedVectorFont::glyphNode
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getGlyphNode@GeneratedVectorFont@touchgfx@@ABEPBUGlyphNode@2@PBUVectorFontNode@2@@Z ENDP ; touchgfx::GeneratedVectorFont::getGlyphNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?find@GeneratedVectorFont@touchgfx@@ABEPBUVectorFontNode@2@G@Z
_TEXT	SEGMENT
_midUnicode$1 = -56					; size = 2
_mid$ = -44						; size = 4
_max$ = -32						; size = 4
_min$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?find@GeneratedVectorFont@touchgfx@@ABEPBUVectorFontNode@2@G@Z PROC ; touchgfx::GeneratedVectorFont::find, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN4@find
; Line 196
	xor	eax, eax
	jmp	$LN1@find
$LN4@find:
; Line 199
	mov	DWORD PTR _min$[ebp], 0
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+44]
	sub	ecx, 1
	mov	DWORD PTR _max$[ebp], ecx
; Line 202
	movzx	eax, WORD PTR _unicode$[ebp]
	imul	ecx, DWORD PTR _min$[ebp], 20
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+24]
	movzx	ecx, WORD PTR [edx+ecx+4]
	sub	eax, ecx
	add	eax, DWORD PTR _min$[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 203
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN5@find
; Line 206
	xor	eax, eax
	jmp	$LN1@find
$LN5@find:
; Line 208
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN8@find
; Line 211
	imul	eax, DWORD PTR _max$[ebp], 20
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	movzx	eax, WORD PTR [edx+eax+4]
	movzx	ecx, WORD PTR _unicode$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _max$[ebp]
	sub	edx, eax
	mov	DWORD PTR _mid$[ebp], edx
; Line 212
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN7@find
; Line 215
	xor	eax, eax
	jmp	$LN1@find
$LN7@find:
; Line 217
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN8@find
; Line 220
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
$LN8@find:
; Line 223
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jg	$LN3@find
; Line 225
	imul	eax, DWORD PTR _mid$[ebp], 20
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	ax, WORD PTR [edx+eax+4]
	mov	WORD PTR _midUnicode$1[ebp], ax
; Line 226
	movzx	eax, WORD PTR _unicode$[ebp]
	movzx	ecx, WORD PTR _midUnicode$1[ebp]
	cmp	eax, ecx
	jne	SHORT $LN9@find
; Line 229
	imul	eax, DWORD PTR _mid$[ebp], 20
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	jmp	$LN1@find
$LN9@find:
; Line 231
	movzx	eax, WORD PTR _unicode$[ebp]
	movzx	ecx, WORD PTR _midUnicode$1[ebp]
	cmp	eax, ecx
	jge	SHORT $LN10@find
; Line 234
	mov	eax, DWORD PTR _mid$[ebp]
	sub	eax, 1
	mov	DWORD PTR _max$[ebp], eax
; Line 235
	mov	eax, DWORD PTR _max$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN12@find
; Line 238
	jmp	$LN3@find
$LN12@find:
; Line 241
	imul	eax, DWORD PTR _max$[ebp], 20
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	movzx	eax, WORD PTR [edx+eax+4]
	movzx	ecx, WORD PTR _unicode$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _max$[ebp]
	sub	edx, eax
	mov	DWORD PTR _mid$[ebp], edx
; Line 242
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN13@find
; Line 245
	jmp	SHORT $LN3@find
$LN13@find:
; Line 247
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN14@find
; Line 250
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
$LN14@find:
; Line 252
	jmp	SHORT $LN17@find
$LN10@find:
; Line 256
	mov	eax, DWORD PTR _mid$[ebp]
	add	eax, 1
	mov	DWORD PTR _min$[ebp], eax
; Line 257
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN15@find
; Line 260
	jmp	SHORT $LN3@find
$LN15@find:
; Line 263
	movzx	eax, WORD PTR _unicode$[ebp]
	imul	ecx, DWORD PTR _min$[ebp], 20
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+24]
	movzx	ecx, WORD PTR [edx+ecx+4]
	sub	eax, ecx
	add	eax, DWORD PTR _min$[ebp]
	mov	DWORD PTR _mid$[ebp], eax
; Line 264
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _min$[ebp]
	jge	SHORT $LN16@find
; Line 267
	jmp	SHORT $LN3@find
$LN16@find:
; Line 269
	mov	eax, DWORD PTR _mid$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jle	SHORT $LN17@find
; Line 272
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
$LN17@find:
; Line 275
	jmp	$LN8@find
$LN3@find:
; Line 276
	xor	eax, eax
$LN1@find:
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?find@GeneratedVectorFont@touchgfx@@ABEPBUVectorFontNode@2@G@Z ENDP ; touchgfx::GeneratedVectorFont::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@GeneratedVectorFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@GeneratedVectorFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::GeneratedVectorFont::getContextualFormsTable, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\include\fonts\GeneratedFont.hpp
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1353A2A0_GeneratedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@GeneratedVectorFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::GeneratedVectorFont::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@GeneratedVectorFont@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@GeneratedVectorFont@touchgfx@@UBEPBGXZ PROC ; touchgfx::GeneratedVectorFont::getGSUBTable, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\include\fonts\GeneratedFont.hpp
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1353A2A0_GeneratedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@GeneratedVectorFont@touchgfx@@UBEPBGXZ ENDP ; touchgfx::GeneratedVectorFont::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getScaleFactor@GeneratedVectorFont@touchgfx@@UBEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getScaleFactor@GeneratedVectorFont@touchgfx@@UBEMXZ PROC ; touchgfx::GeneratedVectorFont::getScaleFactor, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\include\fonts\GeneratedFont.hpp
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1353A2A0_GeneratedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getScaleFactor@GeneratedVectorFont@touchgfx@@UBEMXZ ENDP ; touchgfx::GeneratedVectorFont::getScaleFactor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isVectorBasedFont@GeneratedVectorFont@touchgfx@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isVectorBasedFont@GeneratedVectorFont@touchgfx@@UBE_NXZ PROC ; touchgfx::GeneratedVectorFont::isVectorBasedFont, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\include\fonts\GeneratedFont.hpp
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1353A2A0_GeneratedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
	mov	al, 1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isVectorBasedFont@GeneratedVectorFont@touchgfx@@UBE_NXZ ENDP ; touchgfx::GeneratedVectorFont::isVectorBasedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@GeneratedVectorFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
tv92 = -244						; size = 4
_scaledDistance$1 = -44					; size = 4
_i$2 = -32						; size = 2
_kerndata$ = -20					; size = 4
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@GeneratedVectorFont@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC ; touchgfx::GeneratedVectorFont::getKerning, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 169
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 170
	cmp	DWORD PTR _glyph$[ebp], 0
	je	SHORT $LN6@getKerning
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN5@getKerning
$LN6@getKerning:
; Line 172
	xor	al, al
	jmp	$LN1@getKerning
$LN5@getKerning:
; Line 175
	mov	ecx, DWORD PTR _glyph$[ebp]
	call	?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ ; touchgfx::GlyphNode::kerningTablePos
	movzx	eax, ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _kerndata$[ebp], eax
; Line 176
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	cx, BYTE PTR [eax+12]
	mov	WORD PTR _i$2[ebp], cx
	jmp	SHORT $LN4@getKerning
$LN2@getKerning:
	mov	ax, WORD PTR _i$2[ebp]
	sub	ax, 1
	mov	WORD PTR _i$2[ebp], ax
	mov	ecx, DWORD PTR _kerndata$[ebp]
	add	ecx, 4
	mov	DWORD PTR _kerndata$[ebp], ecx
$LN4@getKerning:
	movzx	eax, WORD PTR _i$2[ebp]
	test	eax, eax
	jle	SHORT $LN3@getKerning
; Line 178
	movzx	eax, WORD PTR _prevChar$[ebp]
	mov	ecx, DWORD PTR _kerndata$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jne	SHORT $LN7@getKerning
; Line 180
	mov	eax, DWORD PTR _kerndata$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	cvtsi2ss xmm0, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [edx+20]
	movss	DWORD PTR _scaledDistance$1[ebp], xmm0
; Line 181
	movss	xmm0, DWORD PTR _scaledDistance$1[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN10@getKerning
	movss	xmm0, DWORD PTR _scaledDistance$1[ebp]
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR tv92[ebp], xmm0
	jmp	SHORT $LN11@getKerning
$LN10@getKerning:
	movss	xmm0, DWORD PTR _scaledDistance$1[ebp]
	subss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR tv92[ebp], xmm0
$LN11@getKerning:
	cvttss2si eax, DWORD PTR tv92[ebp]
	jmp	SHORT $LN1@getKerning
$LN7@getKerning:
; Line 183
	movzx	eax, WORD PTR _prevChar$[ebp]
	mov	ecx, DWORD PTR _kerndata$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jge	SHORT $LN8@getKerning
; Line 185
	jmp	SHORT $LN3@getKerning
$LN8@getKerning:
; Line 187
	jmp	$LN2@getKerning
$LN3@getKerning:
; Line 188
	xor	al, al
$LN1@getKerning:
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@GeneratedVectorFont@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP ; touchgfx::GeneratedVectorFont::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
_TEXT	SEGMENT
_contourData$1 = -32					; size = 4
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_pixelData$ = 12					; size = 4
_bitsPerPixel$ = 16					; size = 4
?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z PROC ; touchgfx::GeneratedVectorFont::getGlyph, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 101
	movzx	eax, WORD PTR _unicode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find@GeneratedVectorFont@touchgfx@@ABEPBUVectorFontNode@2@G@Z ; touchgfx::GeneratedVectorFont::find
	mov	DWORD PTR _node$[ebp], eax
; Line 102
	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN2@getGlyph
; Line 104
	xor	eax, eax
	jmp	SHORT $LN3@getGlyph
; Line 105
	jmp	SHORT $LN3@getGlyph
$LN2@getGlyph:
; Line 108
	movzx	eax, WORD PTR _unicode$[ebp]
	cdq
	and	edx, 2047				; 000007ffH
	add	eax, edx
	sar	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+eax*4]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _contourData$1[ebp], eax
; Line 109
	mov	eax, DWORD PTR _pixelData$[ebp]
	mov	ecx, DWORD PTR _contourData$1[ebp]
	mov	DWORD PTR [eax], ecx
; Line 110
	mov	eax, DWORD PTR _bitsPerPixel$[ebp]
	mov	BYTE PTR [eax], 255			; 000000ffH
; Line 111
	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getGlyphNode@GeneratedVectorFont@touchgfx@@ABEPBUGlyphNode@2@PBUVectorFontNode@2@@Z ; touchgfx::GeneratedVectorFont::getGlyphNode
$LN3@getGlyph:
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z ENDP ; touchgfx::GeneratedVectorFont::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@G@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@G@Z PROC ; touchgfx::GeneratedVectorFont::getGlyph, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-24]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 88
	movzx	eax, WORD PTR _unicode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find@GeneratedVectorFont@touchgfx@@ABEPBUVectorFontNode@2@G@Z ; touchgfx::GeneratedVectorFont::find
	mov	DWORD PTR _node$[ebp], eax
; Line 89
	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN2@getGlyph
; Line 91
	xor	eax, eax
	jmp	SHORT $LN3@getGlyph
; Line 92
	jmp	SHORT $LN3@getGlyph
$LN2@getGlyph:
; Line 95
	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getGlyphNode@GeneratedVectorFont@touchgfx@@ABEPBUGlyphNode@2@PBUVectorFontNode@2@@Z ; touchgfx::GeneratedVectorFont::getGlyphNode
$LN3@getGlyph:
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getGlyph@GeneratedVectorFont@touchgfx@@UBEPBUGlyphNode@2@G@Z ENDP ; touchgfx::GeneratedVectorFont::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GeneratedVectorFont@touchgfx@@QAE@GMPBUVectorFontNode@1@ABUVectorFontData@1@PBQBGPBUVectorKerningNode@1@QBGPBUFontContextualFormsTable@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_baseline$ = 8						; size = 2
_scale$ = 12						; size = 4
_vectorGlyphs$ = 16					; size = 4
_fontData$ = 20						; size = 4
_glyphData$ = 24					; size = 4
_kerning$ = 28						; size = 4
_gsubData$ = 32						; size = 4
_formsTable$ = 36					; size = 4
??0GeneratedVectorFont@touchgfx@@QAE@GMPBUVectorFontNode@1@ABUVectorFontData@1@PBQBGPBUVectorKerningNode@1@QBGPBUFontContextualFormsTable@1@@Z PROC ; touchgfx::GeneratedVectorFont::GeneratedVectorFont, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 66
	mov	eax, DWORD PTR _fontData$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	push	ecx
	mov	edx, DWORD PTR _fontData$[ebp]
	movzx	eax, WORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _fontData$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cvtsi2ss xmm0, edx
	mulss	xmm0, DWORD PTR _scale$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	call	__ftol2
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _fontData$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	cvtsi2ss xmm0, edx
	mulss	xmm0, DWORD PTR _scale$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	call	__ftol2
	movzx	eax, al
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _fontData$[ebp]
	movzx	edx, WORD PTR [ecx+10]
	cvtsi2ss xmm0, edx
	mulss	xmm0, DWORD PTR _scale$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	call	__ftol2
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _fontData$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	cvtsi2ss xmm0, edx
	mulss	xmm0, DWORD PTR _scale$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	call	__ftol2
	movzx	eax, al
	push	eax
	movzx	ecx, WORD PTR _baseline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fontData$[ebp]
	movzx	eax, WORD PTR [edx+10]
	mov	ecx, DWORD PTR _fontData$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	add	eax, edx
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR _scale$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	call	__ftol2_sse
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Font@touchgfx@@IAE@GGEEEEEEGG@Z	; touchgfx::Font::Font
	npad	1
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GeneratedVectorFont@touchgfx@@6B@
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [eax+20], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vectorGlyphs$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _glyphData$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _kerning$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _formsTable$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fontData$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax+44], dx
; Line 76
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _gsubData$[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN2@GeneratedV
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _gsubData$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 79
	jmp	SHORT $LN3@GeneratedV
$LN2@GeneratedV:
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
$LN3@GeneratedV:
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0GeneratedVectorFont@touchgfx@@QAE@GMPBUVectorFontNode@1@ABUVectorFontData@1@PBQBGPBUVectorKerningNode@1@QBGPBUFontContextualFormsTable@1@@Z ENDP ; touchgfx::GeneratedVectorFont::GeneratedVectorFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@FusedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_pixelData$ = 12					; size = 4
_bitsPerPixel$ = 16					; size = 4
?getGlyph@FusedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z PROC ; touchgfx::FusedFont::getGlyph, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 48
	movzx	eax, WORD PTR _unicode$[ebp]
	cmp	eax, 44032				; 0000ac00H
	jl	SHORT $LN4@getGlyph
	movzx	eax, WORD PTR _unicode$[ebp]
	cmp	eax, 55203				; 0000d7a3H
	jle	SHORT $LN2@getGlyph
$LN4@getGlyph:
; Line 50
	mov	eax, DWORD PTR _bitsPerPixel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pixelData$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getGlyph@ConstFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z ; touchgfx::ConstFont::getGlyph
	jmp	SHORT $LN3@getGlyph
; Line 51
	jmp	SHORT $LN3@getGlyph
$LN2@getGlyph:
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	dx, WORD PTR _unicode$[ebp]
	mov	WORD PTR [ecx+4], dx
; Line 55
	mov	eax, DWORD PTR _bitsPerPixel$[ebp]
	mov	BYTE PTR [eax], 1
; Line 56
	mov	eax, DWORD PTR _pixelData$[ebp]
	mov	DWORD PTR [eax], 0
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
$LN3@getGlyph:
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getGlyph@FusedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z ENDP ; touchgfx::FusedFont::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GGeneratedFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GGeneratedFont@touchgfx@@UAEPAXI@Z PROC		; touchgfx::GeneratedFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GeneratedFont@touchgfx@@UAE@XZ
	npad	1
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	44					; 0000002cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGeneratedFont@touchgfx@@UAEPAXI@Z ENDP		; touchgfx::GeneratedFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GeneratedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GeneratedFont@touchgfx@@UAE@XZ PROC			; touchgfx::GeneratedFont::~GeneratedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ConstFont@touchgfx@@UAE@XZ
	npad	1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GeneratedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::GeneratedFont::~GeneratedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@GeneratedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@GeneratedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::GeneratedFont::getContextualFormsTable, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\include\fonts\GeneratedFont.hpp
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1353A2A0_GeneratedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
; Line 30
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@GeneratedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::GeneratedFont::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@GeneratedFont@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@GeneratedFont@touchgfx@@UBEPBGXZ PROC	; touchgfx::GeneratedFont::getGSUBTable, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\include\fonts\GeneratedFont.hpp
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1353A2A0_GeneratedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
; Line 25
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@GeneratedFont@touchgfx@@UBEPBGXZ ENDP	; touchgfx::GeneratedFont::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@GeneratedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_i$1 = -32						; size = 2
_kerndata$ = -20					; size = 4
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@GeneratedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC ; touchgfx::GeneratedFont::getKerning, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 26
	cmp	DWORD PTR _glyph$[ebp], 0
	je	SHORT $LN6@getKerning
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN5@getKerning
$LN6@getKerning:
; Line 28
	xor	al, al
	jmp	SHORT $LN1@getKerning
$LN5@getKerning:
; Line 31
	mov	ecx, DWORD PTR _glyph$[ebp]
	call	?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ ; touchgfx::GlyphNode::kerningTablePos
	movzx	eax, ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _kerndata$[ebp], eax
; Line 32
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	cx, BYTE PTR [eax+12]
	mov	WORD PTR _i$1[ebp], cx
	jmp	SHORT $LN4@getKerning
$LN2@getKerning:
	mov	ax, WORD PTR _i$1[ebp]
	sub	ax, 1
	mov	WORD PTR _i$1[ebp], ax
	mov	ecx, DWORD PTR _kerndata$[ebp]
	add	ecx, 4
	mov	DWORD PTR _kerndata$[ebp], ecx
$LN4@getKerning:
	movzx	eax, WORD PTR _i$1[ebp]
	test	eax, eax
	jle	SHORT $LN3@getKerning
; Line 34
	movzx	eax, WORD PTR _prevChar$[ebp]
	mov	ecx, DWORD PTR _kerndata$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jne	SHORT $LN7@getKerning
; Line 36
	mov	eax, DWORD PTR _kerndata$[ebp]
	mov	al, BYTE PTR [eax+2]
	jmp	SHORT $LN1@getKerning
$LN7@getKerning:
; Line 38
	movzx	eax, WORD PTR _prevChar$[ebp]
	mov	ecx, DWORD PTR _kerndata$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jge	SHORT $LN8@getKerning
; Line 40
	jmp	SHORT $LN3@getKerning
$LN8@getKerning:
; Line 42
	jmp	SHORT $LN2@getKerning
$LN3@getKerning:
; Line 43
	xor	al, al
$LN1@getKerning:
; Line 44
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@GeneratedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP ; touchgfx::GeneratedFont::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPixelData@GeneratedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_table$ = -20						; size = 4
_this$ = -8						; size = 4
_glyph$ = 8						; size = 4
?getPixelData@GeneratedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z PROC ; touchgfx::GeneratedFont::getPixelData, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-24]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _table$[ebp], ecx
; Line 21
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	eax, WORD PTR [eax+4]
	cdq
	and	edx, 2047				; 000007ffH
	add	eax, edx
	sar	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR _glyph$[ebp]
	add	eax, DWORD PTR [edx]
; Line 22
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPixelData@GeneratedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z ENDP ; touchgfx::GeneratedFont::getPixelData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_glyphs$ = 8						; size = 4
_numGlyphs$ = 12					; size = 2
_height$ = 16						; size = 2
_baseline$ = 20						; size = 2
_pixAboveTop$ = 24					; size = 1
_pixBelowBottom$ = 28					; size = 1
_bitsPerPixel$ = 32					; size = 1
_byteAlignRow$ = 36					; size = 1
_maxLeft$ = 40						; size = 1
_maxRight$ = 44						; size = 1
_glyphDataInternalFlash$ = 48				; size = 4
_kerningList$ = 52					; size = 4
_fallbackChar$ = 56					; size = 2
_ellipsisChar$ = 60					; size = 2
_gsubData$ = 64						; size = 4
_formsTable$ = 68					; size = 4
??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z PROC ; touchgfx::GeneratedFont::GeneratedFont, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\TouchGFX\generated\fonts\src\GeneratedFont.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __DBAADE7C_GeneratedFont@cpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 10
	movzx	eax, WORD PTR _ellipsisChar$[ebp]
	push	eax
	movzx	ecx, WORD PTR _fallbackChar$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _maxRight$[ebp]
	push	edx
	movzx	eax, BYTE PTR _maxLeft$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteAlignRow$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bitsPerPixel$[ebp]
	push	edx
	movzx	eax, BYTE PTR _pixBelowBottom$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _pixAboveTop$[ebp]
	push	ecx
	movzx	edx, WORD PTR _baseline$[ebp]
	push	edx
	movzx	eax, WORD PTR _height$[ebp]
	push	eax
	movzx	ecx, WORD PTR _numGlyphs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _glyphs$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ConstFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEGG@Z ; touchgfx::ConstFont::ConstFont
	npad	1
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GeneratedFont@touchgfx@@6B@
; Line 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _glyphDataInternalFlash$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _kerningList$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 13
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _gsubData$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _formsTable$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGGEEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z ENDP ; touchgfx::GeneratedFont::GeneratedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ConstFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ConstFont@touchgfx@@UAE@XZ PROC			; touchgfx::ConstFont::~ConstFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	npad	1
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ConstFont@touchgfx@@UAE@XZ ENDP			; touchgfx::ConstFont::~ConstFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	npad	1
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::Font::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Font@touchgfx@@IAE@GGEEEEEEGG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_height$ = 8						; size = 2
_baseline$ = 12						; size = 2
_pixAboveTop$ = 16					; size = 1
_pixBelowBottom$ = 20					; size = 1
_bitsPerPixel$ = 24					; size = 1
_byteAlignRow$ = 28					; size = 1
_maxLeft$ = 32						; size = 1
_maxRight$ = 36						; size = 1
_fallbackChar$ = 40					; size = 2
_ellipsisChar$ = 44					; size = 2
??0Font@touchgfx@@IAE@GGEEEEEEGG@Z PROC			; touchgfx::Font::Font, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 559
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
; Line 549
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _height$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 550
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _baseline$[ebp]
	mov	WORD PTR [eax+6], cx
; Line 551
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _pixAboveTop$[ebp]
	mov	BYTE PTR [eax+8], cl
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _pixBelowBottom$[ebp]
	mov	BYTE PTR [eax+9], cl
; Line 553
	mov	al, BYTE PTR _bitsPerPixel$[ebp]
	and	al, 127					; 0000007fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+10]
	and	dl, 128					; 00000080H
	or	dl, al
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+10], dl
; Line 554
	movzx	eax, BYTE PTR _byteAlignRow$[ebp]
	and	al, 1
	shl	al, 7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+10]
	and	dl, 127					; 0000007fH
	or	dl, al
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+10], dl
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _maxLeft$[ebp]
	mov	BYTE PTR [eax+11], cl
; Line 556
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _maxRight$[ebp]
	mov	BYTE PTR [eax+12], cl
; Line 557
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _fallbackChar$[ebp]
	mov	WORD PTR [eax+14], cx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _ellipsisChar$[ebp]
	mov	WORD PTR [eax+16], cx
; Line 560
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
??0Font@touchgfx@@IAE@GGEEEEEEGG@Z ENDP			; touchgfx::Font::Font
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getScaleFactor@Font@touchgfx@@UBEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getScaleFactor@Font@touchgfx@@UBEMXZ PROC		; touchgfx::Font::getScaleFactor, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 482
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 483
	fldz
; Line 484
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getScaleFactor@Font@touchgfx@@UBEMXZ ENDP		; touchgfx::Font::getScaleFactor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isVectorBasedFont@Font@touchgfx@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isVectorBasedFont@Font@touchgfx@@UBE_NXZ PROC		; touchgfx::Font::isVectorBasedFont, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 472
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 473
	xor	al, al
; Line 474
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isVectorBasedFont@Font@touchgfx@@UBE_NXZ ENDP		; touchgfx::Font::isVectorBasedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::Font::getContextualFormsTable, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 462
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 463
	xor	eax, eax
; Line 464
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::Font::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@Font@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@Font@touchgfx@@UBEPBGXZ PROC		; touchgfx::Font::getGSUBTable, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 452
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 453
	xor	eax, eax
; Line 454
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@Font@touchgfx@@UBEPBGXZ ENDP		; touchgfx::Font::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC	; touchgfx::Font::getKerning, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 433
	xor	al, al
; Line 434
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP	; touchgfx::Font::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByteAlignRow@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getByteAlignRow@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getByteAlignRow, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+10]
	shr	al, 7
	and	al, 1
; Line 395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getByteAlignRow@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getByteAlignRow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBitsPerPixel@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBitsPerPixel@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getBitsPerPixel, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+10]
	and	al, 127					; 0000007fH
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBitsPerPixel@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getBitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getHeight@Font@touchgfx@@UBEGXZ PROC			; touchgfx::Font::getHeight, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+4]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getHeight@Font@touchgfx@@UBEGXZ ENDP			; touchgfx::Font::getHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBaseline@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBaseline@Font@touchgfx@@UBEGXZ PROC			; touchgfx::Font::getBaseline, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+6]
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBaseline@Font@touchgfx@@UBEGXZ ENDP			; touchgfx::Font::getBaseline
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEllipsisChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEllipsisChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getEllipsisChar, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+16]
; Line 235
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getEllipsisChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getEllipsisChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFallbackChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFallbackChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFallbackChar, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+14]
; Line 222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFallbackChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFallbackChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
_TEXT	SEGMENT
_glyph$ = -44						; size = 4
_bitsPerPixelDummy$ = -29				; size = 1
_dummyPixelDataPointer$ = -20				; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z PROC	; touchgfx::Font::getGlyph, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 202
	movzx	eax, WORD PTR _unicode$[ebp]
	test	eax, eax
	jne	SHORT $LN2@getGlyph
; Line 204
	xor	eax, eax
	jmp	SHORT $LN1@getGlyph
$LN2@getGlyph:
; Line 206
	mov	DWORD PTR _dummyPixelDataPointer$[ebp], 0
; Line 207
	mov	BYTE PTR _bitsPerPixelDummy$[ebp], 0
; Line 208
	mov	esi, esp
	lea	eax, DWORD PTR _bitsPerPixelDummy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dummyPixelDataPointer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _glyph$[ebp], eax
; Line 209
	mov	eax, DWORD PTR _glyph$[ebp]
$LN1@getGlyph:
; Line 210
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getGlyph
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@getGlyph:
	DD	2
	DD	$LN6@getGlyph
$LN6@getGlyph:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@getGlyph
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN5@getGlyph
$LN5@getGlyph:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN4@getGlyph:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z ENDP	; touchgfx::Font::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Font@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Font@touchgfx@@UAE@XZ PROC				; touchgfx::Font::~Font, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
; Line 171
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Font@touchgfx@@UAE@XZ ENDP				; touchgfx::Font::~Font
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ PROC	; touchgfx::GlyphNode::kerningTablePos, COMDAT
; _this$ = ecx
; File F:\projects\STM32\STM32F411E-Disco\SPI_Display\SPI_Display\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __19EB957D_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	npad	1
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+13]
	and	eax, 7
	shl	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+11]
	or	eax, edx
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?kerningTablePos@GlyphNode@touchgfx@@QBEGXZ ENDP	; touchgfx::GlyphNode::kerningTablePos
_TEXT	ENDS
END
